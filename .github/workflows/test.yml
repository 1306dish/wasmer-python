name: Build and Test

on: [push, pull_request]

jobs:
  # The `test` job.
  test:
    name: Test

    strategy:
      matrix:
        # The job runs on 2 different OS.
        os: [ubuntu-latest, macos-latest]
      # As soon as one job fails in the matrix, all the other
      # in-progress jobs are canceled.
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up `pyenv`
        shell: bash
        run: |
          curl https://pyenv.run | bash
          export PATH="$HOME/.pyenv/bin:$PATH"
          cd ~/.pyenv/plugins/python-build && git pull

      - name: Set up Rust
        shell: bash
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y

      - name: Cache Cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo bin
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Python versions
        uses: actions/cache@v1
        with:
          path: ~/.pyenv/versions
          key: ${{ runner.os }}-pyenv-versions

      - name: Set up Python versions
        shell: bash
        run: |
          export PATH="$HOME/.pyenv/bin:$PATH"
          VERSIONS=('3.7.5', '3.8.0')

          pyenv install --list

          echo "Will install the following versions: ${VERSIONS[*]}."

          for version in ${VERSIONS[*]}; do
              test -d $HOME/.pyenv/versions/${version}/bin || pyenv install ${version};
          done

      - name: Set up just
        shell: bash
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          test -f $HOME/.cargo/bin/just || cargo install just

      - name: Prelude
        shell: bash
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          export PATH="$HOME/.pyenv/versions/3.8.0/bin/:$PATH"
          just prelude

      - name: Compile the library
        shell: bash
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          export PATH="$HOME/.pyenv/versions/3.8.0/bin/:$PATH"
          source .env/bin/activate
          just build
          just build-any

      - name: Run all the tests
        shell: bash
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          export PATH="$HOME/.pyenv/versions/3.8.0/bin/:$PATH"
          source .env/bin/activate
          just test
